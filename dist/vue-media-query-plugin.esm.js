var e={tailwindcss:{mixin:{computed:{isMinSm(){return this.$_mqp.resize&&matchMedia("(min-width: 640px)").matches},isMinMd(){return this.$_mqp.resize&&matchMedia("(min-width: 768px)").matches},isMinLg(){return this.$_mqp.resize&&matchMedia("(min-width: 1024px)").matches},isMinXl(){return this.$_mqp.resize&&matchMedia("(min-width: 1280px)").matches},isMin2xl(){return this.$_mqp.resize&&matchMedia("(min-width: 1536px)").matches}}},addEventListeners(e){matchMedia("(min-width: 640px)").addEventListener("change",(()=>{e.resize+=1})),matchMedia("(min-width: 768px)").addEventListener("change",(()=>{e.resize+=1})),matchMedia("(min-width: 1024px)").addEventListener("change",(()=>{e.resize+=1})),matchMedia("(min-width: 1280px)").addEventListener("change",(()=>{e.resize+=1})),matchMedia("(min-width: 1536px)").addEventListener("change",(()=>{e.resize+=1}))}}};const i={install(i,n="tailwindcss"){if(!Object.keys(e).includes(n))throw Error("unsupported UI brand");i.mixin({created(){this.$_mqp=t,i.util.defineReactive(this.$_mqp,"resize",this.$_mqp.resize)},computed:e[n].mixin.computed}),e[n].addEventListeners(t)}},t={resize:1};export default i;
